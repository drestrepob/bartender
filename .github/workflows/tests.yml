name: Bartender-Unit-Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    paths-ignore:
      - ".github/**"
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: ">=0.4.0"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: "Install dependencies"
        run: uv sync --all-extras --dev

      - name: "Run tests"
        env:
          DB_HOST: postgres
          DB_PORT: 5432
        run: uv run pytest -x --no-cov-on-fail --cov=. --cov-report xml --cov-report term

      - name: "Run SonarQube Cloud Scan"
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=coverage.xml
